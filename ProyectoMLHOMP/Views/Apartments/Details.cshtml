@model ProyectoMLHOMP.Models.Apartment

@{
    ViewData["Title"] = Model.Title;
    var isOwner = ViewBag.IsOwner;
}

<div class="container mt-4">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle"></i> @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-circle"></i> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="card shadow-sm">
        <div class="row g-0">
            <!-- Imagen del apartamento -->
            <div class="col-md-6">
                <div class="apartment-image-container">
                    <img src="@Model.ImageUrl"
                         class="img-fluid rounded-start apartment-main-image"
                         alt="@Model.Title"
                         onerror="this.src='/images/apartments/default-apartment.jpg'">
                    @if (!Model.IsAvailable)
                    {
                        <div class="availability-badge">
                            <span class="badge bg-danger">No Disponible</span>
                        </div>
                    }
                    <div class="price-badge">
                        <span class="badge bg-primary fs-5">
                            $@Model.PricePerNight.ToString("N2")<small>/noche</small>
                        </span>
                    </div>
                </div>
            </div>

            <!-- Información del apartamento -->
            <div class="col-md-6">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-start">
                        <h1 class="card-title mb-3">@Model.Title</h1>
                        @if (isOwner)
                        {
                            <div class="btn-group">
                                <a asp-action="Edit" asp-route-id="@Model.ApartmentId"
                                   class="btn btn-outline-primary">
                                    <i class="bi bi-pencil"></i> Editar
                                </a>
                                <a asp-action="Delete" asp-route-id="@Model.ApartmentId"
                                   class="btn btn-outline-danger">
                                    <i class="bi bi-trash"></i> Eliminar
                                </a>
                            </div>
                        }
                    </div>

                    <p class="text-muted mb-4">
                        <i class="bi bi-geo-alt-fill"></i> @Model.Address, @Model.City, @Model.Country
                    </p>

                    <div class="features mb-4">
                        <h5 class="features-title">Características</h5>
                        <div class="row g-3">
                            <div class="col-6 col-md-4">
                                <div class="feature-item">
                                    <i class="bi bi-door-closed"></i>
                                    <span>@Model.Bedrooms Habitaciones</span>
                                </div>
                            </div>
                            <div class="col-6 col-md-4">
                                <div class="feature-item">
                                    <i class="bi bi-droplet"></i>
                                    <span>@Model.Bathrooms Baños</span>
                                </div>
                            </div>
                            <div class="col-6 col-md-4">
                                <div class="feature-item">
                                    <i class="bi bi-people"></i>
                                    <span>@Model.MaxOccupancy Huéspedes</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="description mb-4">
                        <h5>Descripción</h5>
                        <p class="card-text">@Model.Description</p>
                    </div>

                    <div class="host-info mb-4">
                        <h5>Anfitrión</h5>
                        <div class="d-flex align-items-center">
                            <img src="@Model.Owner?.ProfileImageUrl"
                                 class="host-image rounded-circle me-2"
                                 alt="@Model.Owner?.GetFullName()"
                                 onerror="this.src='/images/default-profile.jpg'">
                            <div>
                                <h6 class="mb-0">@Model.Owner?.GetFullName()</h6>
                                <small class="text-muted">Miembro desde @Model.Owner?.RegistrationDate.ToString("MMMM yyyy")</small>
                            </div>
                        </div>
                    </div>

                    <!-- Sección de Reserva -->
                    @if (!isOwner && Model.IsAvailable)
                    {
                        <div class="booking-section">
                            <a asp-controller="Bookings"
                               asp-action="Create"
                               asp-route-id="@Model.ApartmentId"
                               class="btn btn-primary btn-lg w-100">
                                <i class="bi bi-calendar-check"></i> Reservar Ahora
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Sección de Reseñas -->
    @if (Model.Reviews != null && Model.Reviews.Any())
    {
        <div class="card mt-4 shadow-sm">
            <div class="card-header bg-white">
                <h3 class="mb-0">Reseñas</h3>
            </div>
            <div class="card-body">
                @foreach (var review in Model.Reviews.OrderByDescending(r => r.CreatedDate))
                {
                    <div class="review-item mb-4">
                        <div class="d-flex align-items-center mb-2">
                            <img src="@review.Reviewer?.ProfileImageUrl"
                                 class="reviewer-image rounded-circle me-2"
                                 alt="@review.Reviewer?.GetFullName()"
                                 onerror="this.src='/images/default-profile.jpg'">
                            <div>
                                <h6 class="mb-0">@review.Reviewer?.GetFullName()</h6>
                                <small class="text-muted">@review.CreatedDate.ToString("MMMM yyyy")</small>
                            </div>
                        </div>
                        <h5>@review.Title</h5>
                        <div class="rating mb-2">
                            @for (int i = 0; i < review.OverallRating; i++)
                            {
                                <i class="bi bi-star-fill text-warning"></i>
                            }
                        </div>
                        <p class="mb-0">@review.Content</p>
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        .apartment-image-container {
            position: relative;
            height: 500px;
            overflow: hidden;
        }

        .apartment-main-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .availability-badge {
            position: absolute;
            top: 1rem;
            right: 1rem;
        }

        .price-badge {
            position: absolute;
            bottom: 1rem;
            right: 1rem;
        }

        .features-title {
            border-bottom: 2px solid #e9ecef;
            padding-bottom: 0.5rem;
            margin-bottom: 1rem;
        }

        .feature-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #666;
        }

            .feature-item i {
                font-size: 1.2rem;
                color: #0d6efd;
            }

        .host-image, .reviewer-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
        }

        .review-item {
            padding-bottom: 1rem;
            border-bottom: 1px solid #e9ecef;
        }

            .review-item:last-child {
                border-bottom: none;
                padding-bottom: 0;
            }

            .review-item .rating i {
                font-size: 0.9rem;
            }

        @@media (max-width: 768px) {
            .apartment-image-container {
                height: 300px;
            }

            .card-title {
                font-size: 1.5rem;
            }

            .btn-group {
                margin-top: 1rem;
                width: 100%;
            }

                .btn-group .btn {
                    flex: 1;
                }
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Manejo de errores de imagen
            $('img').on('error', function () {
                if ($(this).hasClass('apartment-main-image')) {
                    $(this).attr('src', '/images/apartments/default-apartment.jpg');
                } else {
                    $(this).attr('src', '/images/default-profile.jpg');
                }
            });

            // Auto-ocultar alertas después de 5 segundos
            setTimeout(function () {
                $('.alert').fadeOut('slow');
            }, 5000);

            // Inicializar tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();
        });
    </script>
}